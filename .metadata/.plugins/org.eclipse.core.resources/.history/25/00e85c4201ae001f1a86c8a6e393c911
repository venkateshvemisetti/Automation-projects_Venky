package com.rjio.testcases;

import org.testng.annotations.Parameters;
import org.testng.annotations.Test;


import com.rjio.accelator.ActionWrappers;
import com.rjio.pages.AlertsAccountsPage;

public class AlertsAccountsTestcase extends ActionWrappers {
	AlertsAccountsPage acp = new AlertsAccountsPage();

	@Override
	protected boolean hasChildTest() throws Exception {
		return true;
	}

	@Override
	protected String getParentTestName() {
		return "AlertsAccounts";
	}

	@Test(priority = 1)
	@Parameters({ "accountTypeSms" })
	public void createSMSAccount(String accountType) {
		try {
			acp.alertAccountLink();
			sleep(1000);
			acp.createAccount(accountType, getRowData(acp.getClass().getSimpleName(), 1));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@Test(priority = 2)
	public void editSMSAccount() {
		try {
			acp.editAccount(getRowData(acp.getClass().getSimpleName(), 4));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test(priority = 3)
	public void stopSMSAccount() {
		try {
			acp.stopAccount(getRowData(acp.getClass().getSimpleName(), 1));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test(priority = 4)
	public void startSMSAccount() {
		try {
			acp.startAccount(getRowData(acp.getClass().getSimpleName(), 1));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test(priority = 5)
	public void deleteSMSAccount() {
		try {
			acp.deleteAccount(getRowData(acp.getClass().getSimpleName(), 1));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test(priority = 6)
	@Parameters({ "accountTypeEmail" })
	public void createEmailAccount(String accountType) {
		try {
			acp.alertAccountLink();
			sleep(1000);
			acp.createAccount(accountType, getRowData(acp.getClass().getSimpleName(), 7));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@Test(priority = 7)
	public void editEmailAccount() {
		try {
			acp.editAccount(getRowData(acp.getClass().getSimpleName(), 10));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	@Test(priority = 8)
	public void stopEmailAccount() {
		try {
			acp.stopAccount(getRowData(acp.getClass().getSimpleName(), 7));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test(priority = 9)
	public void startEmailAccount() {
		try {
			acp.startAccount(getRowData(acp.getClass().getSimpleName(), 7));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test(priority = 10)
	public void deleteEmailAccount() {
		try {
			acp.deleteAccount(getRowData(acp.getClass().getSimpleName(), 7));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/* AMQP*/
	@Test(priority = 11)
	@Parameters({ "accountTypeAMQP" })
	public void createAMQPAccount(String accountType) {
		try {
			sleep(1000);
			acp.alertAccountLink();
			sleep(1000);
			acp.createAccount(accountType, getRowData(acp.getClass().getSimpleName(), 13));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	@Test(priority = 12)
	public void editAMQPAccount() {
		try {
			sleep(1000);
			acp.editAccount(getRowData(acp.getClass().getSimpleName(), 16));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	
	@Test(priority = 13)
	public void stopAMQPAccount() {
		try {
			sleep(1000);
			acp.stopAccount(getRowData(acp.getClass().getSimpleName(), 13));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Test(priority = 14)
	public void startAMQPAccount() {
		try {
			sleep(1000);
			acp.startAccount(getRowData(acp.getClass().getSimpleName(), 13));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@Test(priority = 15)
	public void deleteAMQPAccount() {
		try {
			acp.deleteAccount(getRowData(acp.getClass().getSimpleName(), 13));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}


/* JMS*/
@Test(priority = 16)
@Parameters({ "accountTypeJMS" })
public void createJMSAccount(String accountType) {
	try {
		sleep(1000);
		acp.alertAccountLink();
		sleep(1000);
		acp.createAccount(accountType, getRowData(acp.getClass().getSimpleName(), 19));
	} catch (Exception e) {
		e.printStackTrace();
	}
}
@Test(priority = 17)
public void editJMSAccount() {
	try {
		sleep(1000);
		acp.alertAccountLink();
		sleep(1000);
		acp.editAccount(getRowData(acp.getClass().getSimpleName(), 22));
	} catch (Exception e) {
		e.printStackTrace();
	}
}


@Test(priority = 18)
public void stopJMSAccount() {
	try {
		sleep(1000);
		acp.stopAccount(getRowData(acp.getClass().getSimpleName(), 19));
	} catch (Exception e) {
		e.printStackTrace();
	}
}

@Test(priority = 19)
public void startJMSAccount() {
	try {
		sleep(1000);
		acp.startAccount(getRowData(acp.getClass().getSimpleName(), 19));
	} catch (Exception e) {
		e.printStackTrace();
	}
}
@Test(priority = 20)
public void deleteJMSAccount() {
	try {
		acp.deleteAccount(getRowData(acp.getClass().getSimpleName(), 19));
	} catch (Exception e) {
		e.printStackTrace();
	}
}
}