package com.intense.services;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.DeliveryMode;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.jms.TextMessage;

import com.solacesystems.jms.SolConnectionFactory;
import com.solacesystems.jms.SolJmsUtility;

public class PushSolace {

    public static void main(String[] args) {
        String solaceHost = "your_solace_host:port";
        String solaceVPN = "default";
        String solaceUser = "admin";
        String solacePassword = "admin";
        String queueName = "RJIO_SOLACE_V";

        Connection connection = null;
        try {
            // Create a connection factory using SolJmsUtility
            ConnectionFactory connectionFactory = SolJmsUtility.createConnectionFactory();
            
            

            // Set the properties on the connection factory
            ((SolConnectionFactory) connectionFactory).setHost(solaceHost);
            ((SolConnectionFactory) connectionFactory).setVPN(solaceVPN);
            ((SolConnectionFactory) connectionFactory).setUsername(solaceUser);
            ((SolConnectionFactory) connectionFactory).setPassword(solacePassword);

            // Establish connection
            connection = connectionFactory.createConnection();
            connection.start();

            // Create a session
            Session session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);

            // Create the queue
            Queue queue = session.createQueue(queueName);
            MessageProducer messageProducer = session.createProducer(null);
            
            TextMessage message = session.createTextMessage("Hello world Queues!");
            messageProducer.send(queue, message, DeliveryMode.PERSISTENT, Message.DEFAULT_PRIORITY, Message.DEFAULT_TIME_TO_LIVE);
            
            
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // Close resources
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }
}