package com.intense.services;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.DeliveryMode;
import javax.jms.Message;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.jms.TextMessage;

import com.solacesystems.jms.SolConnectionFactory;
import com.solacesystems.jms.SolJmsUtility;

public class PushSolace {

    public static void main(String[] args) {
        String solaceHost = "tcp://10.255.0.51:55003"; // Use SMF compressed port
        String solaceVPN = "default";
        String solaceUser = "admin";
        String solacePassword = "admin";
        String queueName = "Test_sol";

        Connection connection = null;
        Session session = null;
        MessageProducer messageProducer = null;

        try {
            // Create a Solace JMS connection factory
            ConnectionFactory connectionFactory = SolJmsUtility.createConnectionFactory();
            SolConnectionFactory solConnectionFactory = (SolConnectionFactory) connectionFactory;

            // Set required Solace properties
            solConnectionFactory.setHost(solaceHost);
            solConnectionFactory.setVPN(solaceVPN);
            solConnectionFactory.setUsername(solaceUser);
            solConnectionFactory.setPassword(solacePassword);

            // âœ… Enable payload compression (level 1-9, or 0 to disable)
            solConnectionFactory.setCompressionLevel(1); // 1 is the lowest level of compression


            // Establish connection and start it
            connection = solConnectionFactory.createConnection();
            connection.start();

            // Create session
            session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);

            // Create target queue
            Queue queue = session.createQueue(queueName);

            // Create a producer and send a message
            messageProducer = session.createProducer(queue);
            TextMessage message = session.createTextMessage("Hello world Queues!");
            messageProducer.send(queue, message, DeliveryMode.PERSISTENT, Message.DEFAULT_PRIORITY, Message.DEFAULT_TIME_TO_LIVE);

            System.out.println("Message sent successfully to the queue: " + queueName);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // Clean up JMS resources
            try {
                if (messageProducer != null) messageProducer.close();
                if (session != null) session.close();
                if (connection != null) connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
